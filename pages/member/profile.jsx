import { useDispatch, useSelector } from 'react-redux';

import Avvvatars from 'avvvatars-react';
import Cookies from 'js-cookie';
import Head from 'next/head';
import Navbar from '../../components/Navigation/Navbar';
import { doSignOut } from '../../lib/firebase/firebaseAuth';
import { logoutFB } from '../../lib/context/slices/sessionSlice';
import { useRouter } from 'next/router';

function Profile() {
  const dispatch = useDispatch();
  const router = useRouter();
  const email = useSelector((state) => state.session.email);

  const handleLogOut = async () => {
    Cookies.remove('session');
    dispatch(logoutFB());
    await doSignOut(email);
    router.push('/');
  };

  return (
    <div className="">
      <Head>
        <title>Lofty profile</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <div className="flex flex-col items-center justify-center w-full m-3 text-center">
        <h1 className="my-1 text-5xl font-bold font-avenir text-heading">
          Profile
        </h1>
        <div className="m-5">
          <Avvvatars size={60} value={email} />
        </div>
        <p className="my-1 font-bold font-avenir text-heading">{email}</p>

        <div className="px-6 py-2 my-5 text-lg leading-5 text-center transition-colors duration-200 transform rounded-md w-42 text-background bg-icon hover:bg-heading/80 focus:outline-none font-avenir focus:bg-gray-600">
          <button onClick={() => router.push('/auth/reset_password')}>
            Change password
          </button>
        </div>
        <div className="px-6 py-2 my-5 text-lg leading-5 text-center transition-colors duration-200 transform rounded-md w-42 text-background bg-negative hover:bg-heading/80 focus:outline-none font-avenir focus:bg-gray-600">
          <button onClick={handleLogOut}>Cerrar sesion</button>
        </div>
      </div>
    </div>
  );
}

export default Profile;

export async function getServerSideProps({ req, res }) {
  //Quiero obtener el token de las cookies para saber si tengo permiso o redirijo a login

  const token = req.cookies.session;

  if (!token) {
    res.writeHead(302, { Location: '/auth/login' });
    res.end();
  }

  return {
    props: {},
  };
}
